import{e as n}from"./app.918e623c.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const s={},e=n(`<h1 id="checkbox-\u590D\u9009\u6846" tabindex="-1"><a class="header-anchor" href="#checkbox-\u590D\u9009\u6846" aria-hidden="true">#</a> CheckBox\uFF08\u590D\u9009\u6846\uFF09</h1><p>JavaFX CheckBox \u662F\u4E00\u4E2A\u6309\u94AE\uFF0C\u5B83\u53EF\u4EE5\u5904\u4E8E\u4E09\u79CD\u4E0D\u540C\u7684\u72B6\u6001\uFF1A\u9009\u4E2D\u3001\u672A\u9009\u4E2D\u548C\u672A\u77E5\uFF08\u4E0D\u786E\u5B9A\uFF09\u3002JavaFX CheckBox \u63A7\u4EF6\u7531 <code>javafx.scene.control.CheckBox</code> \u7C7B\u8868\u793A\u3002</p><p>A JavaFX CheckBox is a button which can be in three different states: Selected, not selected and unknown (indeterminate). The JavaFX CheckBox control is represented by the class <code>javafx.scene.control.CheckBox</code>.</p><h2 id="\u521B\u5EFA-checkbox" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-checkbox" aria-hidden="true">#</a> \u521B\u5EFA <code>CheckBox</code></h2><p>\u60A8\u53EF\u4EE5\u901A\u8FC7 <code>CheckBox</code> \u7C7B\u7684\u6784\u9020\u5668\u521B\u5EFA JavaFX CheckBox \u63A7\u4EF6\u3002\u8FD9\u662F\u4E00\u4E2A JavaFX <code>CheckBox</code> \u5B9E\u4F8B\u5316\u7684\u793A\u4F8B\uFF1A</p><p>You create a JavaFX CheckBox control via the <code>CheckBox</code> constructor. Here is a JavaFX <code>CheckBox</code> instantiation example:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">CheckBox</span> checkBox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckBox</span><span class="token punctuation">(</span><span class="token string">&quot;Green&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4F20\u9012\u7ED9 <code>CheckBox</code> \u6784\u9020\u51FD\u6570\u7684\u5B57\u7B26\u4E32\u663E\u793A\u5728 <code>CheckBox</code> \u63A7\u4EF6\u65C1\u8FB9\u3002</p><p>The String passed to the <code>CheckBox</code> constructor is displayed next to the <code>CheckBox</code> control.</p><h2 id="\u5728\u573A\u666F\u56FE\u4E2D\u6DFB\u52A0-checkbox" tabindex="-1"><a class="header-anchor" href="#\u5728\u573A\u666F\u56FE\u4E2D\u6DFB\u52A0-checkbox" aria-hidden="true">#</a> \u5728\u573A\u666F\u56FE\u4E2D\u6DFB\u52A0 <code>CheckBox</code></h2><p>\u8981\u4F7F JavaFX <code>CheckBox</code> \u63A7\u4EF6\u53EF\u89C1\uFF0C\u60A8\u5FC5\u987B\u5C06\u5176\u6DFB\u52A0\u5230 JavaFX \u5E94\u7528\u7A0B\u5E8F\u7684\u573A\u666F\u56FE\u4E2D\u3002\u8FD9\u610F\u5473\u7740\u5C06 <code>CheckBox</code> \u63A7\u4EF6\u6DFB\u52A0\u5230 <code>Scene</code> \u5BF9\u8C61\uFF0C\u6216\u6DFB\u52A0\u5230\u81EA\u8EAB\u6DFB\u52A0\u5230 <code>Scene</code> \u5BF9\u8C61\u7684\u67D0\u4E9B\u5E03\u5C40\u7EC4\u4EF6\u3002</p><p>To make a JavaFX <code>CheckBox</code> control visible you must add it to the scene graph of your JavaFX application. That means adding the <code>CheckBox</code> control to a <code>Scene</code> object, or to some layout component which is itself added to a <code>Scene</code> object.</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u793A\u4F8B\uFF0C\u5C55\u793A\u4E86\u5982\u4F55\u5C06 <code>CheckBox</code> \u6DFB\u52A0\u5230\u573A\u666F\u56FE\u4E2D\uFF1A</p><p>Here is an example showing how to add a <code>CheckBox</code> to the scene graph:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jenkov<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>controls</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">CheckBox</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckBoxExperiments</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span>  <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;CheckBox Experiment 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CheckBox</span> checkBox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckBox</span><span class="token punctuation">(</span><span class="token string">&quot;Green&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HBox</span> hbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span>checkBox1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>hbox<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u8FD0\u884C\u6B64\u4EE3\u7801\u751F\u6210\u7684\u5E94\u7528\u7A0B\u5E8F\u5982\u4E0B\u6240\u793A\uFF1A</p><p>The application resulting from running this code looks like this:</p><p><img src="http://tutorials.jenkov.com/images/java-javafx/javafx-checkbox-1.png" alt="A JavaFX CheckBox displayed in the scene graph"></p><h2 id="\u8BFB\u53D6\u9009\u5B9A\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u53D6\u9009\u5B9A\u72B6\u6001" aria-hidden="true">#</a> \u8BFB\u53D6\u9009\u5B9A\u72B6\u6001</h2><p>\u60A8\u53EF\u4EE5\u901A\u8FC7\u5176\u65B9\u6CD5 <code>isSelected()</code> \u8BFB\u53D6 <code>CheckBox</code> \u7684\u9009\u5B9A\u72B6\u6001\u3002\u4E0B\u9762\u662F\u8C03\u7528 <code>isSelected()</code> \u7684\u793A\u4F8B\uFF1A</p><p>You can read the selected state of a <code>CheckBox</code> via its method <code>isSelected()</code>. Here is an example of how calling <code>isSelected()</code> looks:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> isSelected <span class="token operator">=</span> checkBox1<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u5141\u8BB8\u672A\u77E5\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u5141\u8BB8\u672A\u77E5\u72B6\u6001" aria-hidden="true">#</a> \u5141\u8BB8\u672A\u77E5\u72B6\u6001</h2><p>\u5982\u524D\u6240\u8FF0\uFF0CJavaFX <code>CheckBox</code> \u53EF\u4EE5\u5904\u4E8E <em>\u672A\u77E5\u72B6\u6001</em>\uFF0C\u8FD9\u610F\u5473\u7740\u5B83\u65E2\u672A\u88AB\u9009\u4E2D\uFF0C\u4E5F\u672A\u88AB\u9009\u4E2D\u3002\u7528\u6237\u53EA\u662F\u8FD8\u6CA1\u6709\u4E0E <code>CheckBox</code> \u8FDB\u884C\u4EA4\u4E92\u3002</p><p>As mentioned earlier a JavaFX <code>CheckBox</code> can be in an <em>indeterminate state</em> which means that is is neither selected, nor not selected. The user simply has not interacted with the <code>CheckBox</code> yet.</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C<code>CheckBox</code> \u4E0D\u5141\u8BB8\u5904\u4E8E\u672A\u77E5\u72B6\u6001\u3002\u60A8\u53EF\u4EE5\u4F7F\u7528\u65B9\u6CD5 <code>setAllowIndeterminate()</code> \u8BBE\u7F6E\u662F\u5426\u5141\u8BB8 <code>CheckBox</code> \u5904\u4E8E\u4E0D\u786E\u5B9A\u72B6\u6001\u3002 \u8FD9\u662F\u4E00\u4E2A\u5141\u8BB8 <code>CheckBox</code> \u5904\u4E8E\u672A\u77E5\u72B6\u6001\u7684\u793A\u4F8B\uFF1A</p><p>By default a <code>CheckBox</code> is not allowed to be in the indeterminate state. You can set if a <code>CheckBox</code> is allowed to be in an indeterminate state using the method <code>setAllowIndeterminate()</code>. Here is an example of allowing the indeterminate state for a <code>CheckBox</code>:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>checkBox1<span class="token punctuation">.</span><span class="token function">setAllowIndeterminate</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u8BFB\u53D6\u672A\u77E5\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u53D6\u672A\u77E5\u72B6\u6001" aria-hidden="true">#</a> \u8BFB\u53D6\u672A\u77E5\u72B6\u6001</h2><p>\u60A8\u53EF\u4EE5\u901A\u8FC7\u5176 <code>isIndeterminate()</code> \u65B9\u6CD5\u8BFB\u53D6 <code>CheckBox</code> \u662F\u5426\u5904\u4E8E\u672A\u77E5\u72B6\u6001\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u68C0\u67E5 <code>CheckBox</code> \u662F\u5426\u5904\u4E8E\u672A\u77E5\u72B6\u6001\u7684\u793A\u4F8B\uFF1A</p><p>You can read if a <code>CheckBox</code> is in the indeterminate state via its <code>isIndeterminate()</code> method. Here is an example of checking if a <code>CheckBox</code> is in the indeterminate state:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> isIndeterminate <span class="token operator">=</span> checkBox1<span class="token punctuation">.</span><span class="token function">isIndeterminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8BF7\u6CE8\u610F\uFF0C\u5982\u679C <code>CheckBox</code> \u4E0D\u5904\u4E8E\u672A\u77E5\u72B6\u6001\uFF0C\u5219\u5B83\u8981\u4E48\u88AB\u9009\u4E2D\uFF0C\u8981\u4E48\u672A\u88AB\u9009\u4E2D\uFF0C\u8FD9\u53EF\u4EE5\u901A\u8FC7\u524D\u9762\u663E\u793A\u7684 <code>isSelected()</code> \u65B9\u6CD5\u770B\u5230\u3002</p><p>Note, that if a <code>CheckBox</code> is not in the indeterminate state, it is either selected or not selected, which can be seen via its <code>isSelected()</code> method shown earlier.</p>`,34);function c(o,p){return e}var i=a(s,[["render",c]]);export{i as default};
