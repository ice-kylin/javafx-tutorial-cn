import{r as l,o as c,c as r,b as e,a as t,w as n,F as h,d as a,e as i}from"./app.918e623c.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";var p="/assets/overview-1.aff8118d.png";const u={},_=e("h1",{id:"javafx-\u6982\u8FF0",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#javafx-\u6982\u8FF0","aria-hidden":"true"},"#"),a(" JavaFX \u6982\u8FF0")],-1),v={class:"custom-container details"},m=e("summary",null,"\u76EE\u5F55",-1),f={class:"table-of-contents"},F=a("\u821E\u53F0\uFF08Stage\uFF09"),b=a("\u573A\u666F\uFF08Scene\uFF09"),g=a("\u573A\u666F\u56FE\uFF08Scene Graph\uFF09"),J=a("\u8282\u70B9\uFF08Nodes\uFF09"),X=a("\u63A7\u4EF6\uFF08Controls\uFF09"),w=a("\u5E03\u5C40\uFF08Layouts\uFF09"),y=a("\u5D4C\u5957\u5E03\u5C40"),x=a("\u56FE\u8868\uFF08Charts\uFF09"),k=a("2D \u56FE\u5F62"),S=a("3D \u56FE\u5F62"),j=a("\u97F3\u9891"),T=a("\u89C6\u9891"),B=a("WebView"),C=i('<p>\u8981\u4ECE\u4F7F\u7528 JavaFX \u5F00\u53D1\u4E2D\u5145\u5206\u53D7\u76CA\uFF0C\u4E86\u89E3 JavaFX \u7684\u8BBE\u8BA1\u65B9\u5F0F\u4EE5\u53CA\u5BF9 JavaFX \u5305\u542B\u7684\u529F\u80FD\u6709\u4E00\u4E2A\u5F88\u597D\u7684\u6982\u8FF0\u662F\u5F88\u6709\u7528\u7684\u3002 \u672C\u6587\u7684\u76EE\u7684\u662F\u4E3A\u60A8\u63D0\u4F9B JavaFX \u6982\u8FF0\u3002\u672C\u6587\u5C06\u9996\u5148\u4ECB\u7ECD\u4E00\u822C\u7684 JavaFX \u8BBE\u8BA1\uFF0C\u7136\u540E\u518D\u4ECB\u7ECD JavaFX \u4E2D\u7684\u5404\u79CD\u7279\u6027\u3002</p><p>To fully benefit from JavaFX it is useful to understand how JavaFX is designed, and to have a good overview of what features JavaFX contains. The purpose of this text is to give you that JavaFX overview. This text will first look at the general JavaFX design, then look at the various features in JavaFX.</p><p>\u5982\u679C\u60A8\u719F\u6089 Flash / Flex\uFF0C\u60A8\u4F1A\u53D1\u73B0 JavaFX \u5728\u67D0\u79CD\u7A0B\u5EA6\u4E0A\u53D7\u5230\u4E86 Flash / Flex \u7684\u542F\u53D1\u3002JavaFX \u4E2D\u4E5F\u6709\u4E00\u4E9B\u76F8\u540C\u7684\u60F3\u6CD5\u3002</p><p>If you are familiar with Flash / Flex, you will see that JavaFX is somewhat inspired by Flash / Flex. Some of the same ideas are found in JavaFX.</p><p>\u4E00\u822C\u6765\u8BF4\uFF0CJavaFX \u5E94\u7528\u7A0B\u5E8F\u5305\u542B\u4E00\u4E2A\u6216\u591A\u4E2A\u5BF9\u5E94\u4E8E\u7A97\u53E3\u7684\u821E\u53F0\uFF08stage\uFF09\u3002\u6BCF\u4E2A\u821E\u53F0\u90FD\u6709\u4E00\u4E2A\u573A\u666F\uFF08scene\uFF09\u3002\u6BCF\u4E2A\u573A\u666F\u90FD\u53EF\u4EE5\u6709\u4E00\u4E2A\u5305\u542B\u63A7\u4EF6\uFF08control\uFF09\u3001\u5E03\u5C40\uFF08layout\uFF09\u7B49\u7B49\u8282\u70B9\uFF08node\uFF09\u7684\u5BF9\u8C61\u56FE\uFF0C\u79F0\u4E3A\u573A\u666F\u56FE\uFF08scene graph\uFF09\u3002\u8FD9\u4E9B\u6982\u5FF5\u90FD\u5C06\u5728\u540E\u9762\u66F4\u8BE6\u7EC6\u5730\u89E3\u91CA\u3002\u4E0B\u9762\u662F JavaFX \u5E94\u7528\u7A0B\u5E8F\u7684\u4E00\u822C\u7ED3\u6784\u7684\u56FE\u793A\uFF1A</p><p>In general, a JavaFX application contains one or more stages which corresponds to windows. Each stage has a scene attached to it. Each scene can have an object graph of controls, layouts etc. attached to it, called the scene graph. These concepts are all explained in more detail later. Here is an illustration of the general structure of a JavaFX application:</p><p><img src="'+p+'" alt=""></p><h2 id="\u821E\u53F0-stage" tabindex="-1"><a class="header-anchor" href="#\u821E\u53F0-stage" aria-hidden="true">#</a> \u821E\u53F0\uFF08Stage\uFF09</h2><p>\u821E\u53F0\u662F JavaFX \u5E94\u7528\u7A0B\u5E8F\u7684\u5916\u90E8\u6846\u67B6\u3002\u4E00\u4E2A\u821E\u53F0\u901A\u5E38\u5BF9\u5E94\u4E8E\u4E00\u4E2A\u7A97\u53E3\u3002\u5728 JavaFX \u53EF\u4EE5\u5728\u6D4F\u89C8\u5668\u4E2D\u8FD0\u884C\u7684\u65E9\u671F\u9636\u6BB5\uFF0C\u821E\u53F0\u4E5F\u53EF\u4EE5\u6307\u7F51\u9875\u5185 JavaFX \u53EF\u7528\u4E8E\u7ED8\u5236\u81EA\u8EAB\u7684\u533A\u57DF\u3002</p><p>The stage is the outer frame for a JavaFX application. The stage typically corresponds to a window. In the early days where JavaFX could run in the browser, the stage could also refer to the area inside the web page that JavaFX had available to draw itself.</p><p>\u81EA\u4ECE\u6D4F\u89C8\u5668\u505C\u6B62\u5BF9 Java \u63D2\u4EF6\u7684\u652F\u6301\uFF0CJavaFX \u4E3B\u8981\u7528\u4E8E\u684C\u9762\u5E94\u7528\u7A0B\u5E8F\u3002 \u5728\u8FD9\u91CC\uFF0CJavaFX \u53D6\u4EE3\u4E86 Swing \u4F5C\u4E3A\u63A8\u8350\u7684\u684C\u9762 GUI \u6846\u67B6\u3002 \u800C\u4E14\u6211\u5FC5\u987B\u8BF4\uFF0CJavaFX \u770B\u8D77\u6765\u6BD4 Swing \u66F4\u52A0\u4E00\u81F4\u4E14\u529F\u80FD\u4E30\u5BCC\u3002</p><p>Since the deprecation of the Java browser plugin JavaFX is mostly used for desktop applications. Here, JavaFX replaces Swing as the recommended desktop GUI framework. And I must say, that JavaFX looks a whole lot more consistent and feature rich than Swing.</p><p>\u5728\u684C\u9762\u73AF\u5883\u4E2D\u4F7F\u7528\u65F6\uFF0CJavaFX \u5E94\u7528\u7A0B\u5E8F\u53EF\u4EE5\u6253\u5F00\u591A\u4E2A\u7A97\u53E3\u3002 \u6BCF\u4E2A\u7A97\u53E3\u90FD\u6709\u81EA\u5DF1\u7684\u821E\u53F0\u3002</p><p>When used in a desktop environment, a JavaFX application can have multiple windows open. Each window has its own stage.</p><p>\u6BCF\u4E2A\u821E\u53F0\u90FD\u7531 JavaFX \u5E94\u7528\u7A0B\u5E8F\u4E2D\u7684 <code>Stage</code> \u5BF9\u8C61\u8868\u793A\u3002 JavaFX \u5E94\u7528\u7A0B\u5E8F\u6709\u4E00\u4E2A\u7531 JavaFX \u8FD0\u884C\u65F6\u4E3A\u60A8\u521B\u5EFA\u7684\u4E3B\u8981 <code>Stage</code> \u5BF9\u8C61\u3002 \u5982\u679C JavaFX \u5E94\u7528\u7A0B\u5E8F\u9700\u8981\u6253\u5F00\u989D\u5916\u7684\u7A97\u53E3\uFF0C\u5B83\u53EF\u4EE5\u521B\u5EFA\u989D\u5916\u7684 <code>Stage</code> \u5BF9\u8C61\u3002 \u4F8B\u5982\u7528\u4E8E\u5BF9\u8BDD\u6846\u3001\u5411\u5BFC\u7B49\u3002</p><p>Each stage is represented by a <code>Stage</code> object inside a JavaFX application. A JavaFX application has a primary <code>Stage</code> object which is created for you by the JavaFX runtime. A JavaFX application can create additional <code>Stage</code> objects if it needs additional windows open. For instance, for dialogs, wizards etc.</p><h2 id="\u573A\u666F-scene" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F-scene" aria-hidden="true">#</a> \u573A\u666F\uFF08Scene\uFF09</h2><p>\u8981\u5728 JavaFX \u5E94\u7528\u7A0B\u5E8F\u7684\u821E\u53F0\u4E0A\u663E\u793A\u4EFB\u4F55\u5185\u5BB9\uFF0C\u60A8\u9700\u8981\u4E00\u4E2A\u573A\u666F\u3002\u4E00\u4E2A\u821E\u53F0\u4E00\u6B21\u53EA\u80FD\u663E\u793A\u4E00\u4E2A\u573A\u666F\uFF0C\u4F46\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u5207\u6362\u573A\u666F\u3002\u5C31\u50CF\u5267\u9662\u4E2D\u7684\u821E\u53F0\u53EF\u4EE5\u91CD\u65B0\u5B89\u6392\u4EE5\u5728\u620F\u5267\u8868\u6F14\u671F\u95F4\u663E\u793A\u591A\u4E2A\u573A\u666F\u4E00\u6837\uFF0CJavaFX \u4E2D\u7684\u821E\u53F0\u5BF9\u8C61\u53EF\u4EE5\u5728 JavaFX \u5E94\u7528\u7A0B\u5E8F\u7684\u751F\u547D\u5468\u671F\u5185\u663E\u793A\u591A\u4E2A\u573A\u666F\uFF08\u4E00\u6B21\u4E00\u4E2A\uFF09\u3002</p><p>To display anything on a stage in a JavaFX application, you need a <em>scene</em>. A stage can only show one scene at a time, but it is possible to exchange the scene at runtime. Just like a stage in a theater can be rearranged to show multiple scenes during a play, a stage object in JavaFX can show multiple scenes (one at a time) during the life time of a JavaFX application.</p><p>\u60A8\u53EF\u80FD\u60F3\u77E5\u9053\u4E3A\u4EC0\u4E48 JavaFX \u5E94\u7528\u7A0B\u5E8F\u7684\u6BCF\u4E2A\u821E\u53F0\u4F1A\u6709\u591A\u4E2A\u573A\u666F\u3002\u60F3\u8C61\u4E00\u4E2A\u7535\u8111\u6E38\u620F\u3002\u4E00\u4E2A\u6E38\u620F\u53EF\u80FD\u6709\u591A\u4E2A\u201C\u5C4F\u5E55\u201D\u5411\u73A9\u5BB6\u663E\u793A\u3002\u4F8B\u5982\uFF0C\u521D\u59CB\u83DC\u5355\u5C4F\u5E55\u3001\u4E3B\u6E38\u620F\u5C4F\u5E55\uFF08\u73A9\u6E38\u620F\u7684\u5730\u65B9\uFF09\u3001\u6E38\u620F\u7ED3\u675F\u5C4F\u5E55\u548C\u5206\u6570\u7ED3\u7B97\u5C4F\u5E55\u3002\u8FD9\u4E9B\u5C4F\u5E55\u4E2D\u7684\u6BCF\u4E00\u4E2A\u90FD\u53EF\u4EE5\u7531\u4E0D\u540C\u7684\u573A\u666F\u6765\u8868\u793A\u3002\u5F53\u6E38\u620F\u9700\u8981\u4ECE\u4E00\u5C4F\u5207\u6362\u5230\u4E0B\u4E00\u5C4F\u65F6\uFF0C\u53EA\u9700\u5C06\u76F8\u5E94\u7684\u573A\u666F\u9644\u52A0\u5230 JavaFX \u5E94\u7528\u7A0B\u5E8F\u7684 Stage \u5BF9\u8C61\u5373\u53EF\u3002</p><p>You might wonder why a JavaFX application would ever have more than one scene per stage. Imagine a computer game. A game might have multiple &quot;screens&quot; to show to the user. For instance, an initial menu screen, the main game screen (where the game is played), a game over screen and a high score screen. Each of these screens can be represented by a different scene. When the game needs to change from one screen to the next, it simply attaches the corresponding scene to the <code>Stage</code> object of the JavaFX application.</p><p>\u573A\u666F\u7531 JavaFX \u5E94\u7528\u7A0B\u5E8F\u4E2D\u7684 <code>Scene</code> \u5BF9\u8C61\u8868\u793A\u3002JavaFX \u5E94\u7528\u7A0B\u5E8F\u5FC5\u987B\u521B\u5EFA\u5B83\u9700\u8981\u7684\u6240\u6709 <code>Scene</code> \u5BF9\u8C61\u3002</p><p>A scene is represented by a <code>Scene</code> object inside a JavaFX application. A JavaFX application must create all <code>Scene</code> objects it needs.</p><h3 id="\u573A\u666F\u56FE-scene-graph" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F\u56FE-scene-graph" aria-hidden="true">#</a> \u573A\u666F\u56FE\uFF08Scene Graph\uFF09</h3><p>\u6240\u6709\u89C6\u89C9\u7EC4\u4EF6\uFF08\u63A7\u4EF6\u3001\u5E03\u5C40\u7B49\uFF09\u90FD\u5FC5\u987B\u9644\u52A0\u5230\u8981\u663E\u793A\u7684\u573A\u666F\uFF0C\u5E76\u4E14\u8BE5\u573A\u666F\u5FC5\u987B\u9644\u52A0\u5230\u821E\u53F0\u624D\u80FD\u4F7F\u6574\u4E2A\u573A\u666F\u53EF\u89C1\u3002\u9644\u52A0\u5230\u573A\u666F\u7684\u6240\u6709\u63A7\u4EF6\u3001\u5E03\u5C40\u7B49\u7684\u603B\u5BF9\u8C61\u56FE\u79F0\u4E3A\u573A\u666F\u56FE\u3002</p><p>All visual components (controls, layouts etc.) must be attached to a scene to be displayed, and that scene must be attached to a stage for the whole scene to be visible. The total object graph of all the controls, layouts etc. attached to a scene is called the <em>scene graph</em>.</p><h3 id="\u8282\u70B9-nodes" tabindex="-1"><a class="header-anchor" href="#\u8282\u70B9-nodes" aria-hidden="true">#</a> \u8282\u70B9\uFF08Nodes\uFF09</h3><p>\u9644\u52A0\u5230\u573A\u666F\u56FE\u7684\u6240\u6709\u7EC4\u4EF6\u90FD\u79F0\u4E3A\u8282\u70B9\u3002\u6240\u6709\u8282\u70B9\u90FD\u662F\u540D\u4E3A <code>javafx.scene.Node</code> \u7684 JavaFX \u7C7B\u7684\u5B50\u7C7B\u3002</p><p>All components attached to the scene graph are called <em>nodes</em>. All nodes are subclasses of a JavaFX class called <code>javafx.scene.Node</code> .</p><p>\u6709\u4E24\u79CD\u7C7B\u578B\u7684\u8282\u70B9\uFF1A\u5206\u652F\u8282\u70B9\u548C\u53F6\u8282\u70B9\u3002\u5206\u652F\u8282\u70B9\u662F\u53EF\u4EE5\u5305\u542B\u5176\u4ED6\u8282\u70B9\uFF08\u5B50\u8282\u70B9\uFF09\u7684\u8282\u70B9\u3002\u5206\u652F\u8282\u70B9\u4E5F\u79F0\u4E3A\u7236\u8282\u70B9\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u53EF\u4EE5\u5305\u542B\u5B50\u8282\u70B9\u3002\u53F6\u8282\u70B9\u662F\u4E0D\u80FD\u5305\u542B\u5176\u4ED6\u8282\u70B9\u7684\u8282\u70B9\u3002</p><p>There are two types of nodes: Branch nodes and leaf nodes. A branch node is a node that can contain other nodes (child nodes). Branch nodes are also referred to as parent nodes because they can contain child nodes. A leaf node is a node which cannot contain other nodes.</p><h2 id="\u63A7\u4EF6-controls" tabindex="-1"><a class="header-anchor" href="#\u63A7\u4EF6-controls" aria-hidden="true">#</a> \u63A7\u4EF6\uFF08Controls\uFF09</h2><p>JavaFX \u63A7\u4EF6\u662F\u5728 JavaFX \u5E94\u7528\u7A0B\u5E8F\u4E2D\u63D0\u4F9B\u67D0\u79CD\u63A7\u5236\u529F\u80FD\u7684 JavaFX \u7EC4\u4EF6\u3002\u4F8B\u5982\uFF0C\u6309\u94AE\u3001\u5355\u9009\u6309\u94AE\u3001\u8868\u683C\u3001\u6811\u7B49\u7B49\u3002</p><p>JavaFX controls are JavaFX components which provide some kind of control functionality inside a JavaFX application. For instance, a button, radio button, table, tree etc.</p><p>\u4E3A\u4E86\u4F7F\u63A7\u4EF6\u53EF\u89C1\uFF0C\u5B83\u5FC5\u987B\u9644\u52A0\u5230\u67D0\u4E2A <code>Scene</code>\u5BF9\u8C61\u7684\u573A\u666F\u56FE\u4E2D\u3002</p><p>For a control to be visible it must be attached to the scene graph of some <code>Scene</code> object.</p><p>\u63A7\u4EF6\u901A\u5E38\u5D4C\u5957\u5728\u4E00\u4E9B\u7528\u6765\u7BA1\u7406\u63A7\u4EF6\u76F8\u5BF9\u4E8E\u5F7C\u6B64\u7684\u5E03\u5C40\u7684\u7EC4\u4EF6\u4E2D\uFF0C\u79F0\u4E3A JavaFX \u5E03\u5C40\u7EC4\u4EF6\u3002</p><p>Controls are usually nested inside some JavaFX layout component that manages the layout of controls relative to each other.</p><p>JavaFX \u5305\u542B\u4EE5\u4E0B\u63A7\u4EF6\uFF1A</p><p>JavaFX contains the following controls:</p>',40),P=e("li",null,"Accordion\uFF08\u624B\u98CE\u7434\uFF09",-1),A={href:"http://tutorials.jenkov.com/javafx/button.html",target:"_blank",rel:"noopener noreferrer"},V=a("Button\uFF08\u6309\u94AE\uFF09"),W={href:"http://tutorials.jenkov.com/javafx/checkbox.html",target:"_blank",rel:"noopener noreferrer"},I=a("CheckBox\uFF08\u590D\u9009\u6846\uFF09"),D=e("li",null,"ChoiceBox\uFF08\u9009\u62E9\u6846\uFF09",-1),L=e("li",null,"ColorPicker\uFF08\u989C\u8272\u9009\u62E9\u5668\uFF09",-1),E=e("li",null,"ComboBox\uFF08\u7EC4\u5408\u6846\uFF09",-1),H=e("li",null,"DatePicker\uFF08\u65E5\u671F\u9009\u62E9\u5668\uFF09",-1),N={href:"http://tutorials.jenkov.com/javafx/label.html",target:"_blank",rel:"noopener noreferrer"},G=a("Label\uFF08\u6807\u7B7E\uFF09"),M=e("li",null,"ListView\uFF08\u5217\u8868\u663E\u793A\uFF09",-1),R=e("li",null,"Menu\uFF08\u83DC\u5355\uFF09",-1),U=e("li",null,"MenuBar\uFF08\u83DC\u5355\u680F\uFF09",-1),q=e("li",null,"PasswordField\uFF08\u5BC6\u7801\u6846\uFF09",-1),z=e("li",null,"ProgressBar\uFF08\u8FDB\u5EA6\u6761\uFF09",-1),K={href:"http://tutorials.jenkov.com/javafx/radiobutton.html",target:"_blank",rel:"noopener noreferrer"},Y=a("RadioButton"),O=a("\uFF08\u5355\u9009\u6309\u94AE\uFF09"),Q=e("li",null,"Slider\uFF08\u6ED1\u5757\uFF09",-1),Z=e("li",null,"Spinner\uFF08\u5FAE\u8C03\u5668\uFF09",-1),$=e("li",null,"SplitMenuButton\uFF08\u62C6\u5206\u83DC\u5355\u6309\u94AE\uFF09",-1),ee=e("li",null,"SplitPane\uFF08\u62C6\u5206\u7A97\u683C\uFF09",-1),ae=e("li",null,"TableView\uFF08\u8868\u89C6\u56FE\uFF09",-1),te=e("li",null,"TabPane\uFF08\u9009\u9879\u5361\u7A97\u683C\uFF09",-1),oe=e("li",null,"TextArea\uFF08\u6587\u672C\u533A\u57DF\uFF09",-1),ne={href:"http://tutorials.jenkov.com/javafx/textfield.html",target:"_blank",rel:"noopener noreferrer"},se=a("TextField\uFF08\u6587\u672C\u6846\uFF09"),ie=e("li",null,"TitledPane\uFF08\u6807\u9898\u7A97\u683C\uFF09",-1),le={href:"http://tutorials.jenkov.com/javafx/togglebutton.html",target:"_blank",rel:"noopener noreferrer"},ce=a("ToggleButton\uFF08\u5207\u6362\u6309\u94AE\uFF09"),re=e("li",null,"ToolBar\uFF08\u5DE5\u5177\u680F\uFF09",-1),he=e("li",null,"TreeTableView\uFF08\u6811\u8868\u89C6\u56FE\uFF09",-1),de=e("li",null,"TreeView\uFF08\u6811\u89C6\u56FE\uFF09",-1),pe=i('<p>\u8FD9\u4E9B\u63A7\u4EF6\u90FD\u5C06\u5728\u5355\u72EC\u7684\u6587\u672C\u4E2D\u8FDB\u884C\u89E3\u91CA\u3002</p><p>Each of these controls will be explained in separate texts.</p><h2 id="\u5E03\u5C40-layouts" tabindex="-1"><a class="header-anchor" href="#\u5E03\u5C40-layouts" aria-hidden="true">#</a> \u5E03\u5C40\uFF08Layouts\uFF09</h2><p><em>JavaFX \u5E03\u5C40</em> \u662F\u5305\u542B\u5176\u4ED6\u7EC4\u4EF6\u7684\u7EC4\u4EF6\u3002\u5E03\u5C40\u7EC4\u4EF6\u7BA1\u7406\u5D4C\u5957\u5728\u5176\u4E2D\u7684\u7EC4\u4EF6\u7684\u5E03\u5C40\u3002JavaFX \u5E03\u5C40\u7EC4\u4EF6\u6709\u65F6\u4E5F\u79F0\u4E3A\u7236\u7EC4\u4EF6\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u5305\u542B\u5B50\u7EC4\u4EF6\uFF0C\u8FD8\u56E0\u4E3A\u5E03\u5C40\u7EC4\u4EF6\u662F JavaFX \u7C7B <code>javafx.scene.Parent</code> \u7684\u5B50\u7C7B\u3002</p><p><em>JavaFX layouts</em> are components which contains other components inside them. The layout component manages the layout of the components nested inside it. JavaFX layout components are also sometimes called <em>parent components</em> because they contain child components, and because layout components are subclasses of the JavaFX class <code>javafx.scene.Parent</code>.</p><p>\u5E03\u5C40\u7EC4\u4EF6\u5FC5\u987B\u9644\u52A0\u5230\u67D0\u4E2A <code>Scene</code> \u5BF9\u8C61\u7684\u573A\u666F\u56FE\u624D\u80FD\u53EF\u89C1\u3002</p><p>A layout component must be attached to the scene graph of some <code>Scene</code> object to be visible.</p><p>JavaFX \u5305\u542B\u4EE5\u4E0B\u5E03\u5C40\u7EC4\u4EF6\uFF1A</p><p>JavaFX contains the following layout components:</p>',9),ue=e("li",null,"Group",-1),_e=e("li",null,"Region",-1),ve=e("li",null,"Pane\uFF08\u7A97\u683C\uFF09",-1),me={href:"http://tutorials.jenkov.com/javafx/hbox.html",target:"_blank",rel:"noopener noreferrer"},fe=a("HBox"),Fe={href:"http://tutorials.jenkov.com/javafx/vbox.html",target:"_blank",rel:"noopener noreferrer"},be=a("VBox"),ge=e("li",null,"FlowPane\uFF08\u6D41\u7A97\u683C\uFF09",-1),Je=e("li",null,"BorderPane\uFF08\u8FB9\u6846\u7A97\u683C\uFF09",-1),Xe=e("li",null,"StackPane\uFF08\u5806\u6808\u7A97\u683C\uFF09",-1),we=e("li",null,"TilePane",-1),ye=e("li",null,"GridPane\uFF08\u7F51\u683C\u7A97\u683C\uFF09",-1),xe=e("li",null,"AnchorPane",-1),ke=e("li",null,"TextFlow\uFF08\u6587\u672C\u6D41\uFF09",-1),Se=i('<p>\u8FD9\u4E9B\u5E03\u5C40\u7EC4\u4EF6\u90FD\u5C06\u5728\u5355\u72EC\u7684\u6587\u672C\u4E2D\u8FDB\u884C\u4ECB\u7ECD\u3002</p><p>Each of these layout components will be covered in separate texts.</p><h3 id="\u5D4C\u5957\u5E03\u5C40" tabindex="-1"><a class="header-anchor" href="#\u5D4C\u5957\u5E03\u5C40" aria-hidden="true">#</a> \u5D4C\u5957\u5E03\u5C40</h3><p>\u53EF\u4EE5\u5C06\u5E03\u5C40\u7EC4\u4EF6\u5D4C\u5957\u5728\u5176\u5B83\u5E03\u5C40\u7EC4\u4EF6\u4E2D\u3002\u8FD9\u5BF9\u4E8E\u5B9E\u73B0\u7279\u5B9A\u5E03\u5C40\u5F88\u6709\u7528\u3002\u4F8B\u5982\uFF0C\u8981\u83B7\u5F97\u672A\u5728\u7F51\u683C\u4E2D\u5E03\u5C40\u3001\u4F46\u5B9E\u73B0\u591A\u884C\u90FD\u62E5\u6709\u4E0D\u540C\u7684\u6C34\u5E73\u5E03\u5C40\u7684\u7EC4\u4EF6\uFF0C\u60A8\u53EF\u4EE5\u5728 VBox \u7EC4\u4EF6\u5185\u5D4C\u5957\u591A\u4E2A HBox \u5E03\u5C40\u7EC4\u4EF6\u3002</p><p>It is possible to nest layout components inside other layout components. This can be useful to achieve a specific layout. For instance, to get horizontal rows of components which are not laid out in a grid, but differently for each row, you can nest multiple HBox layout components inside a VBox component.</p><h2 id="\u56FE\u8868-charts" tabindex="-1"><a class="header-anchor" href="#\u56FE\u8868-charts" aria-hidden="true">#</a> \u56FE\u8868\uFF08Charts\uFF09</h2><p>JavaFX \u5E26\u6709\u4E00\u7EC4\u5185\u7F6E\u7684\u5F00\u7BB1\u5373\u7528\u7684\u56FE\u8868\u7EC4\u4EF6\uFF0C\u56E0\u6B64\u60A8\u4E0D\u5FC5\u6BCF\u6B21\u9700\u8981\u57FA\u672C\u56FE\u8868\u65F6\u90FD\u4ECE\u5934\u5F00\u59CB\u7F16\u5199\u56FE\u8868\u4EE3\u7801\u3002</p><p>JavaFX comes with a set of built-in ready-to-use chart components, so you don&#39;t have to code charts from scratch everytime you need a basic chart.</p><p>JavaFX \u5305\u542B\u4EE5\u4E0B\u56FE\u8868\u7EC4\u4EF6\uFF1A</p><p>JavaFX contains the following chart components:</p><ul><li>AreaChart\uFF08\u9762\u79EF\u56FE\uFF09</li><li>BarChart\uFF08\u6761\u5F62\u56FE\uFF09</li><li>BubbleChart\uFF08\u6C14\u6CE1\u56FE\uFF09</li><li>LineChart\uFF08\u6298\u7EBF\u56FE\uFF09</li><li>PieChart\uFF08\u997C\u5F62\u56FE\uFF09</li><li>ScatterChart\uFF08\u6563\u70B9\u56FE\uFF09</li><li>StackedAreaChart\uFF08\u5806\u79EF\u9762\u79EF\u56FE\uFF09</li><li>StackedBarChart\uFF08\u5806\u79EF\u6761\u5F62\u56FE\uFF09</li></ul><h2 id="_2d-\u56FE\u5F62" tabindex="-1"><a class="header-anchor" href="#_2d-\u56FE\u5F62" aria-hidden="true">#</a> 2D \u56FE\u5F62</h2><p>JavaFX \u5305\u542B\u53EF\u4EE5\u8F7B\u677E\u5728\u5C4F\u5E55\u4E0A\u7ED8\u5236 2D \u56FE\u5F62\u7684\u529F\u80FD\u3002</p><p>JavaFX contains features that makes it easy to draw 2D graphics on the screen.</p><h2 id="_3d-\u56FE\u5F62" tabindex="-1"><a class="header-anchor" href="#_3d-\u56FE\u5F62" aria-hidden="true">#</a> 3D \u56FE\u5F62</h2><p>JavaFX \u5305\u542B\u53EF\u4EE5\u8F7B\u677E\u5728\u5C4F\u5E55\u4E0A\u7ED8\u5236 3D \u56FE\u5F62\u7684\u529F\u80FD\u3002</p><p>JavaFX contains features that makes it easy to draw 3D graphics on the screen.</p><h2 id="\u97F3\u9891" tabindex="-1"><a class="header-anchor" href="#\u97F3\u9891" aria-hidden="true">#</a> \u97F3\u9891</h2><p>JavaFX \u5305\u542B\u53EF\u4EE5\u8F7B\u677E\u5728 JavaFX \u5E94\u7528\u7A0B\u5E8F\u4E2D\u64AD\u653E\u97F3\u9891\u7684\u529F\u80FD\u3002\u8FD9\u901A\u5E38\u5728\u6E38\u620F\u6216\u6559\u80B2\u5E94\u7528\u4E2D\u5F88\u6709\u7528\u3002</p><p>JavaFX contains features that makes it easy to play audio in JavaFX applications. This is typically useful in games or educational applications.</p><h2 id="\u89C6\u9891" tabindex="-1"><a class="header-anchor" href="#\u89C6\u9891" aria-hidden="true">#</a> \u89C6\u9891</h2><p>JavaFX \u5305\u542B\u53EF\u4EE5\u8F7B\u677E\u5728 JavaFX \u5E94\u7528\u7A0B\u5E8F\u4E2D\u64AD\u653E\u89C6\u9891\u7684\u529F\u80FD\u3002\u8FD9\u901A\u5E38\u5728\u6D41\u5A92\u4F53\u5E94\u7528\u7A0B\u5E8F\u3001\u6E38\u620F\u6216\u6559\u80B2\u5E94\u7528\u7A0B\u5E8F\u4E2D\u5F88\u6709\u7528\u3002</p><p>JavaFX contains features that makes it easy to play video in JavaFX applications. This is typically useful in streaming applications, games or educational applications.</p><h2 id="webview" tabindex="-1"><a class="header-anchor" href="#webview" aria-hidden="true">#</a> WebView</h2><p>JavaFX \u5305\u542B\u4E00\u4E2A\u80FD\u591F\u663E\u793A\u7F51\u9875\uFF08HTML5\u3001CSS \u7B49\uFF09\u7684 <code>WebView</code> \u7EC4\u4EF6\u3002 JavaFX <code>WebView</code> \u7EC4\u4EF6\u57FA\u4E8E WebKit \u2014\u2014 Chrome \u548C Safari \u4E2D\u4E5F\u4F7F\u7528\u7684\u7F51\u9875\u6E32\u67D3\u5F15\u64CE\u3002</p><p>JavaFX contains a <code>WebView</code> component which is capable of showing web pages (HTML5, CSS etc.). The JavaFX <code>WebView</code> component is based on WebKit - the web page rendering engine also used in Chrome and Safari.</p><p><code>WebView</code> \u7EC4\u4EF6\u4F7F\u5F97\u5C06\u684C\u9762\u5E94\u7528\u7A0B\u5E8F\u4E0E Web \u5E94\u7528\u7A0B\u5E8F\u6DF7\u5408\u6210\u4E3A\u53EF\u80FD\u3002\u6709\u65F6\u8FD9\u5F88\u6709\u7528\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u60A8\u5DF2\u7ECF\u6709\u4E00\u4E2A\u4E0D\u9519\u7684 Web \u5E94\u7528\u7A0B\u5E8F\uFF0C\u4F46\u9700\u8981\u4E00\u4E9B\u53EA\u6709\u684C\u9762\u5E94\u7528\u7A0B\u5E8F\u624D\u80FD\u63D0\u4F9B\u7684\u529F\u80FD \u2014\u2014 \u4F8B\u5982\u78C1\u76D8\u8BBF\u95EE\u3001\u5B9E\u73B0\u4E0E HTTP \u4EE5\u5916\u7684\u5176\u5B83\u7F51\u7EDC\u534F\u8BAE\uFF08\u4F8B\u5982 UDP\u3001IAP \u7B49\uFF09\u7684\u901A\u4FE1\u3002</p><p>The <code>WebView</code> component makes it possible to mix a desktop application with a web application. There are times where that is useful. For instance, if you already have a decent web application, but need some features which can only be provided sensibly with a desktop application - like disk access, communication with other network protocols than HTTP (e.g UDP, IAP etc.) .</p>',28);function je(Te,Be){const o=l("RouterLink"),s=l("ExternalLinkIcon");return c(),r(h,null,[_,e("details",v,[m,e("nav",f,[e("ul",null,[e("li",null,[t(o,{to:"#\u821E\u53F0-stage"},{default:n(()=>[F]),_:1})]),e("li",null,[t(o,{to:"#\u573A\u666F-scene"},{default:n(()=>[b]),_:1}),e("ul",null,[e("li",null,[t(o,{to:"#\u573A\u666F\u56FE-scene-graph"},{default:n(()=>[g]),_:1})]),e("li",null,[t(o,{to:"#\u8282\u70B9-nodes"},{default:n(()=>[J]),_:1})])])]),e("li",null,[t(o,{to:"#\u63A7\u4EF6-controls"},{default:n(()=>[X]),_:1})]),e("li",null,[t(o,{to:"#\u5E03\u5C40-layouts"},{default:n(()=>[w]),_:1}),e("ul",null,[e("li",null,[t(o,{to:"#\u5D4C\u5957\u5E03\u5C40"},{default:n(()=>[y]),_:1})])])]),e("li",null,[t(o,{to:"#\u56FE\u8868-charts"},{default:n(()=>[x]),_:1})]),e("li",null,[t(o,{to:"#_2d-\u56FE\u5F62"},{default:n(()=>[k]),_:1})]),e("li",null,[t(o,{to:"#_3d-\u56FE\u5F62"},{default:n(()=>[S]),_:1})]),e("li",null,[t(o,{to:"#\u97F3\u9891"},{default:n(()=>[j]),_:1})]),e("li",null,[t(o,{to:"#\u89C6\u9891"},{default:n(()=>[T]),_:1})]),e("li",null,[t(o,{to:"#webview"},{default:n(()=>[B]),_:1})])])])]),C,e("ul",null,[P,e("li",null,[e("a",A,[V,t(s)])]),e("li",null,[e("a",W,[I,t(s)])]),D,L,E,H,e("li",null,[e("a",N,[G,t(s)])]),M,R,U,q,z,e("li",null,[e("a",K,[Y,t(s)]),O]),Q,Z,$,ee,ae,te,oe,e("li",null,[e("a",ne,[se,t(s)])]),ie,e("li",null,[e("a",le,[ce,t(s)])]),re,he,de]),pe,e("ul",null,[ue,_e,ve,e("li",null,[e("a",me,[fe,t(s)])]),e("li",null,[e("a",Fe,[be,t(s)])]),ge,Je,Xe,we,ye,xe,ke]),Se],64)}var Ae=d(u,[["render",je]]);export{Ae as default};
