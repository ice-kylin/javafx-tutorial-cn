import{e as n}from"./app.918e623c.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="passwordfield-\u5BC6\u7801\u6846" tabindex="-1"><a class="header-anchor" href="#passwordfield-\u5BC6\u7801\u6846" aria-hidden="true">#</a> PasswordField\uFF08\u5BC6\u7801\u6846\uFF09</h1><p>JavaFX PasswordField \u63A7\u4EF6\u4F7F JavaFX \u5E94\u7528\u7A0B\u5E8F\u7684\u7528\u6237\u80FD\u591F\u8F93\u5165\u5BC6\u7801\uFF0C\u7136\u540E\u5E94\u7528\u7A0B\u5E8F\u53EF\u4EE5\u8BFB\u53D6\u8BE5\u5BC6\u7801\u3002<code>PasswordField</code> \u63A7\u4EF6\u4E0D\u663E\u793A\u8F93\u5165\u7684\u6587\u672C\u3002\u76F8\u53CD\uFF0C\u5B83\u4F1A\u4E3A\u6BCF\u4E2A\u8F93\u5165\u7684\u5B57\u7B26\u663E\u793A\u4E00\u4E2A\u5706\u5708\u3002JavaFX PasswordField \u63A7\u4EF6\u7531 <code>javafx.scene.control.PasswordField</code> \u7C7B\u8868\u793A\u3002</p><p>A JavaFX PasswordField control enables users of a JavaFX application to enter password which can then be read by the application. The <code>PasswordField</code> control does not show the texted entered into it. Instead it shows a circle for each character entered. The JavaFX PasswordField control is represented by the class <code>javafx.scene.control.PasswordField</code>.</p><h2 id="\u521B\u5EFA-passwordfield" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-passwordfield" aria-hidden="true">#</a> \u521B\u5EFA <code>PasswordField</code></h2><p>\u60A8\u53EF\u4EE5\u901A\u8FC7\u521B\u5EFA <code>PasswordField</code> \u7C7B\u7684\u5B9E\u4F8B\u6765\u521B\u5EFA PasswordField \u63A7\u4EF6\u3002\u8FD9\u662F\u4E00\u4E2A JavaFX <code>PasswordField</code> \u5B9E\u4F8B\u5316\u7684\u793A\u4F8B\uFF1A</p><p>You create a PasswordField control by creating an instance of the <code>PasswordField</code> class. Here is a JavaFX <code>PasswordField</code> instantiation example:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">PasswordField</span> passwordField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PasswordField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u5411\u573A\u666F\u56FE\u4E2D\u6DFB\u52A0-passwordfield" tabindex="-1"><a class="header-anchor" href="#\u5411\u573A\u666F\u56FE\u4E2D\u6DFB\u52A0-passwordfield" aria-hidden="true">#</a> \u5411\u573A\u666F\u56FE\u4E2D\u6DFB\u52A0 <code>PasswordField</code></h2><p>\u8981\u4F7F JavaFX <code>PasswordField</code> \u53EF\u89C1\uFF0C\u5FC5\u987B\u5C06 <code>PasswordField</code> \u5BF9\u8C61\u6DFB\u52A0\u5230\u573A\u666F\u56FE\u4E2D\u3002\u8FD9\u610F\u5473\u7740\u5C06\u5176\u6DFB\u52A0\u5230 <code>Scene</code> \u5BF9\u8C61\uFF0C\u6216\u4F5C\u4E3A\u9644\u52A0\u5230 <code>Scene</code> \u5BF9\u8C61\u7684\u5E03\u5C40\u7EC4\u4EF6\u7684\u5B50\u8282\u70B9\u3002</p><p>For a JavaFX <code>PasswordField</code> to be visible the <code>PasswordField</code> object must be added to the scene graph. This means adding it to a <code>Scene</code> object, or as child of a layout which is attached to a <code>Scene</code> object.</p><p>\u8FD9\u662F\u4E00\u4E2A\u5C06 JavaFX <code>PasswordField</code> \u9644\u52A0\u5230\u573A\u666F\u56FE\u7684\u793A\u4F8B\uFF1A</p><p>Here is an example that attaches a JavaFX <code>PasswordField</code> to the scene graph:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jenkov<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>controls</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">PasswordField</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PasswordFieldExperiments</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span>  <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;PasswordField Experiment 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">PasswordField</span> passwordField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PasswordField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HBox</span> hbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span>passwordField<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>hbox<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u8FD0\u884C\u4E0A\u8FF0 JavaFX <code>PasswordField</code> \u793A\u4F8B\u7684\u7ED3\u679C\u5982\u4E0B\u6240\u793A\uFF1A</p><p>The result of running the above JavaFX <code>PasswordField</code> example is an application that looks like this:</p><p><img src="http://tutorials.jenkov.com/images/java-javafx/javafx-passwordfield-1.png" alt="A JavaFX PasswordField component displayed in the scene graph."></p><h2 id="\u83B7\u53D6-passwordfield-\u7684\u6587\u672C" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-passwordfield-\u7684\u6587\u672C" aria-hidden="true">#</a> \u83B7\u53D6 <code>PasswordField</code> \u7684\u6587\u672C</h2><p>\u60A8\u53EF\u4EE5\u4F7F\u7528\u5B83\u7684 <code>getText()</code> \u65B9\u6CD5\u83B7\u53D6\u8F93\u5165\u5230 <code>PasswordField</code> \u4E2D\u7684\u6587\u672C\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\u7C7B\u578B\u3002\u8FD9\u662F\u4E00\u4E2A\u5B8C\u6574\u7684\u793A\u4F8B\uFF0C\u5B83\u663E\u793A\u4E86\u4E00\u4E2A <code>PasswordField</code> \u548C\u4E00\u4E2A <code>Button</code>\uFF0C\u5E76\u5728\u5355\u51FB\u6309\u94AE\u65F6\u8BFB\u53D6\u8F93\u5165\u5230 <code>PasswordField</code> \u4E2D\u7684\u6587\u672C\uFF1A</p><p>You can get the text entered into a <code>PasswordField</code> using its <code>getText()</code> method which returns a <code>String</code>. Here is a full example that shows a <code>PasswordField</code> and a <code>Button</code> and which reads the text entered into the <code>PasswordField</code> when the button is clicked:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jenkov<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>controls</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">Button</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">PasswordField</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PasswordFieldExperiments</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span>  <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;PasswordField Experiment 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">PasswordField</span> passwordField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PasswordField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Button</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">&quot;Click to get password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        button<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>action <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>passwordField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HBox</span> hbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span>passwordField<span class="token punctuation">,</span> button<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>hbox<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div>`,20);function e(t,o){return p}var i=s(a,[["render",e]]);export{i as default};
