import{r as t,o as p,c,b as s,a as e,w as o,F as l,d as n,e as u}from"./app.918e623c.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},d=s("h1",{id:"radiobutton-\u5355\u9009\u6309\u94AE",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#radiobutton-\u5355\u9009\u6309\u94AE","aria-hidden":"true"},"#"),n(" RadioButton\uFF08\u5355\u9009\u6309\u94AE\uFF09")],-1),k=n("JavaFX RadioButton \u662F\u4E00\u4E2A\u8981\u4E48\u9009\u62E9\u3001\u8981\u4E48\u4E0D\u9009\u62E9\u7684\u6309\u94AE\u3002"),m=s("code",null,"RadioButton",-1),b=n(" \u4E0E "),g=n("ToggleButton\uFF08\u5F00\u5173\u6309\u94AE\uFF09"),h=n("\u975E\u5E38\u76F8\u4F3C\uFF0C\u4F46\u533A\u522B\u5728\u4E8E\u4E00\u65E6\u9009\u62E9 "),B=s("code",null,"RadioButton",-1),v=n(" \u5C31\u4E0D\u80FD\u201C\u53D6\u6D88\u9009\u62E9\u201D\u3002\u5982\u679C "),_=s("code",null,"RadioButton",-1),f=n(" \u662F "),R=s("code",null,"ToggleGroup",-1),w=n(" \u7684\u4E00\u90E8\u5206\uFF0C\u90A3\u4E48\u4E00\u65E6\u7B2C\u4E00\u6B21\u9009\u62E9\u4E86 "),x=s("code",null,"RadioButton",-1),y=n("\uFF0C\u5219\u5728 "),T=s("code",null,"ToggleGroup",-1),j=n(" \u4E2D\u59CB\u7EC8\u4F1A\u6709\u4E00\u4E2A "),S=s("code",null,"RadioButton",-1),G=n(" \u88AB\u9009\u4E2D\uFF08\u4E0D\u4E00\u5B9A\u662F\u4E00\u5F00\u59CB\u9009\u62E9\u7684\u90A3\u4E2A\uFF09\u3002"),F=n("A JavaFX RadioButton is a button that can be selected or not selected. The "),J=s("code",null,"RadioButton",-1),X=n(" is very similar to the "),q=n("ToggleButton"),H=n(", but with the difference that a "),A=s("code",null,"RadioButton",-1),E=n(' cannot be "unselected" once selected. If '),L=s("code",null,"RadioButton",-1),N=n("s are part of a "),V=s("code",null,"ToggleGroup",-1),Y=n(" then once a "),C=s("code",null,"RadioButton",-1),I=n(" has been selected for the first time, there must be one "),O=s("code",null,"RadioButton",-1),D=n(" selected in the "),U=s("code",null,"ToggleGroup",-1),z=n("."),K=u(`<p>JavaFX RadioButton \u7531 <code>javafx.scene.control.RadioButton</code> \u7C7B\u8868\u793A\u3002<code>RadioButton</code> \u7C7B\u662F <code>ToggleButton</code> \u7C7B\u7684\u5B50\u7C7B\u3002</p><p>The JavaFX RadioButton is represented by the class <code>javafx.scene.control.RadioButton</code>. The <code>RadioButton</code> class is a subclass of the <code>ToggleButton</code> class.</p><h2 id="\u521B\u5EFA\u4E00\u4E2A-radiobutton" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u4E00\u4E2A-radiobutton" aria-hidden="true">#</a> \u521B\u5EFA\u4E00\u4E2A <code>RadioButton</code></h2><p>\u60A8\u4F7F\u7528\u5176\u6784\u9020\u5668\u521B\u5EFA\u4E00\u4E2A JavaFX <code>RadioButton</code>\u3002\u8FD9\u662F\u4E00\u4E2A JavaFX <code>RadioButton</code> \u5B9E\u4F8B\u5316\u7684\u793A\u4F8B\uFF1A</p><p>You create a JavaFX <code>RadioButton</code> using its constructor. Here is a JavaFX <code>RadioButton</code> instantiation example:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">RadioButton</span> radioButton1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">&quot;Left&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u7ED9 <code>RadioButton</code> \u6784\u9020\u5668\u7684\u5B57\u7B26\u4E32\u5C06\u663E\u793A\u5728 <code>RadioButton</code> \u65C1\u8FB9\u3002</p><p>The String passed as parameter to the <code>RadioButton</code> constructor is displayed next to the <code>RadioButton</code>.</p><h2 id="\u5C06-radiobutton-\u6DFB\u52A0\u5230\u573A\u666F\u56FE\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u5C06-radiobutton-\u6DFB\u52A0\u5230\u573A\u666F\u56FE\u4E2D" aria-hidden="true">#</a> \u5C06 <code>RadioButton</code> \u6DFB\u52A0\u5230\u573A\u666F\u56FE\u4E2D</h2><p>\u8981\u4F7F <code>RadioButton</code> \u53EF\u89C1\uFF0C\u60A8\u5FC5\u987B\u5C06\u5176\u6DFB\u52A0\u5230 JavaFX \u5E94\u7528\u7A0B\u5E8F\u7684\u573A\u666F\u56FE\u4E2D\u3002\u8FD9\u610F\u5473\u7740\u5C06 <code>RadioButton</code> \u6DFB\u52A0\u5230 <code>Scene</code> \u4E2D\uFF0C\u6216\u8005\u4F5C\u4E3A\u6DFB\u52A0\u5230 <code>Scene</code> \u5BF9\u8C61\u7684\u5E03\u5C40\u7EC4\u4EF6\u7684\u5B50\u8282\u70B9\u3002</p><p>To make a <code>RadioButton</code> visible you must add it to the scene graph of your JavaFX application. This means adding the <code>RadioButton</code> to a <code>Scene</code>, or as child of a layout which is attached to a <code>Scene</code> object.</p><p>\u8FD9\u662F\u4E00\u4E2A\u5C06 JavaFX <code>RadioButton</code> \u6DFB\u52A0\u5230\u573A\u666F\u56FE\u7684\u793A\u4F8B\uFF1A</p><p>Here is an example that attaches a JavaFX <code>RadioButton</code> to the scene graph:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jenkov<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>controls</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">RadioButton</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RadioButtonExperiments</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span>  <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;HBox Experiment 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">RadioButton</span> radioButton1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">&quot;Left&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HBox</span> hbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span>radioButton1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>hbox<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u8FD0\u884C\u6B64\u793A\u4F8B\u751F\u6210\u7684\u5E94\u7528\u7A0B\u5E8F\u5982\u4E0B\u6240\u793A\uFF1A</p><p>The application resulting from running this example looks like this:</p><p><img src="http://tutorials.jenkov.com/images/java-javafx/javafx-radiobutton-1.png" alt="A JavaFX RadioButton displayed in the scene graph"></p><h2 id="\u8BFB\u53D6\u9009\u5B9A\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u53D6\u9009\u5B9A\u72B6\u6001" aria-hidden="true">#</a> \u8BFB\u53D6\u9009\u5B9A\u72B6\u6001</h2><p><code>RadioButton</code> \u7C7B\u6709\u4E00\u4E2A\u540D\u4E3A <code>isSelected</code> \u7684\u65B9\u6CD5\uFF0C\u53EF\u8BA9\u60A8\u786E\u5B9A\u662F\u5426\u9009\u62E9\u4E86 <code>RadioButton</code>\u3002<code>isSelected()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A <code>boolean</code> \u7C7B\u578B\u7684\u8FD4\u56DE\u503C\u3002\u5982\u679C\u9009\u62E9\u4E86 <code>RadioButton</code>\uFF0C\u5219\u8FD4\u56DE\u503C\u4E3A <code>true</code>\uFF0C\u5426\u5219\u8FD4\u56DE <code>false</code>\u3002\u8FD9\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><p>The <code>RadioButton</code> class has a method named <code>isSelected</code> which lets you determine if the <code>RadioButton</code> is selected or not. The <code>isSelected()</code> method returns a <code>boolean</code> with the value <code>true</code> if the <code>RadioButton</code> is selected, and <code>false</code> if not. Here is an example:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> isSelected <span class="token operator">=</span> radioButton1<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u5F00\u5173\u7EC4-togglegroup" tabindex="-1"><a class="header-anchor" href="#\u5F00\u5173\u7EC4-togglegroup" aria-hidden="true">#</a> \u5F00\u5173\u7EC4\uFF08ToggleGroup\uFF09</h2><p>\u60A8\u53EF\u4EE5\u5C06 JavaFX <code>RadioButton</code> \u5B9E\u4F8B\u5206\u7EC4\u5230 <code>ToggleGroup</code>\u3002<code>ToggleGroup</code> \u5141\u8BB8\u5728\u4EFB\u4F55\u65F6\u5019\u6700\u591A\u9009\u62E9\u4E00\u4E2A <code>RadioButton</code>\u3002</p><p>You can group JavaFX <code>RadioButton</code> instances into a <code>ToggleGroup</code>. A <code>ToggleGroup</code> allows at most one <code>RadioButton</code> to be selected at any time.</p><p>\u8FD9\u662F\u4E00\u4E2A JavaFX <code>ToggleGroup</code> \u7684\u793A\u4F8B\uFF1A</p><p>Here is a JavaFX <code>ToggleGroup</code> example:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jenkov<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>controls</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span></span><span class="token class-name">Application</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span></span><span class="token class-name">Scene</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">RadioButton</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span><span class="token class-name">ToggleGroup</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span></span><span class="token class-name">HBox</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span></span><span class="token class-name">Stage</span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RadioButtonExperiments</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span>  <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Stage</span> primaryStage<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;HBox Experiment 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">RadioButton</span> radioButton1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">&quot;Left&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RadioButton</span> radioButton2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">&quot;Right&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RadioButton</span> radioButton3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">&quot;Up&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RadioButton</span> radioButton4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">&quot;Down&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ToggleGroup</span> radioGroup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToggleGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        radioButton1<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>radioGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
        radioButton2<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>radioGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
        radioButton3<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>radioGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
        radioButton4<span class="token punctuation">.</span><span class="token function">setToggleGroup</span><span class="token punctuation">(</span>radioGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HBox</span> hbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span>radioButton1<span class="token punctuation">,</span> radioButton2<span class="token punctuation">,</span> radioButton3<span class="token punctuation">,</span> radioButton4<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>hbox<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>\u8FD0\u884C\u6B64\u793A\u4F8B\u751F\u6210\u7684\u5E94\u7528\u7A0B\u5E8F\u5982\u4E0B\u6240\u793A\uFF1A</p><p>The application resulting from running this example looks like this:</p><p><img src="http://tutorials.jenkov.com/images/java-javafx/javafx-radiobutton-2.png" alt="Four JavaFX RadioButton instances in a ToggleGroup displayed in the scene graph"></p><h2 id="\u8BFB\u53D6-togglegroup-\u7684\u9009\u5B9A\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u53D6-togglegroup-\u7684\u9009\u5B9A\u72B6\u6001" aria-hidden="true">#</a> \u8BFB\u53D6 <code>ToggleGroup</code> \u7684\u9009\u5B9A\u72B6\u6001</h2><p>\u60A8\u53EF\u4EE5\u4F7F\u7528 <code>getSelectedToggle()</code> \u65B9\u6CD5\u8BFB\u53D6 <code>ToggleGroup</code> \u7684\u54EA\u4E2A <code>RadioButton</code> \u88AB\u9009\u4E2D\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><p>You can read which <code>RadioButton</code> of a <code>ToggleGroup</code> is selected using the <code>getSelectedToggle()</code> method, like this:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">RadioButton</span> selectedRadioButton <span class="token operator">=</span>
        <span class="token punctuation">(</span><span class="token class-name">RadioButton</span><span class="token punctuation">)</span> toggleGroup<span class="token punctuation">.</span><span class="token function">getSelectedToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5982\u679C\u6CA1\u6709\u88AB\u9009\u62E9\u7684 <code>RadioButton</code>\uFF0C<code>getSelectedToggle()</code> \u65B9\u6CD5\u5C06\u8FD4\u56DE <code>null</code>\u3002</p><p>If no <code>RadioButton</code> is selected the <code>getSelectedToggle()</code> method returns <code>null</code>.</p>`,36);function M(P,Q){const a=t("RouterLink");return p(),c(l,null,[d,s("p",null,[k,m,b,e(a,{to:"/basic-control/togglebutton.html"},{default:o(()=>[g]),_:1}),h,B,v,_,f,R,w,x,y,T,j,S,G]),s("p",null,[F,J,X,e(a,{to:"/basic-control/togglebutton.html"},{default:o(()=>[q]),_:1}),H,A,E,L,N,V,Y,C,I,O,D,U,z]),K],64)}var $=i(r,[["render",M]]);export{$ as default};
